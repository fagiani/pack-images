name: Build, Test, Publish

on:
  pull_request:
  push:
    branches: master
  schedule:
    - cron: '0 0 * * 1-5'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  create-image:
    runs-on: ubuntu-22.04
    env:
      dockerfile: Dockerfile.build
      stack_name: heroku-16
      base_image: heroku/heroku:16-build
      image_tag: ghcr.io/fagiani/cnb/heroku-16:build
      image_file: pack-16-build.tar
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - uses: buildpacks/github-actions/setup-pack@v5.1.0
      - run: docker build -f $dockerfile --build-arg STACK=$stack_name --build-arg BASE_IMAGE=$base_image -t $image_tag .
      - run: docker save $image_tag > /tmp/workspace/$image_file
  create-pack-builder:
    runs-on: ubuntu-22.04
    env:
      image_tag: ghcr.io/fagiani/cnb/heroku-16:builder
      builder.toml: builder-16.toml
      image_file: buildpacks-16.tar
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - uses: buildpacks/github-actions/setup-pack@v5.1.0
      - run: docker load < $(ls /tmp/workspace/pack-*-build.tar | head -1)
      - run: docker load < $(ls /tmp/workspace/pack-*-run.tar | head -1)
      - name: Create builder with retries
        run: |
            n=1
            until [ "$n" -ge 5 ]
            do
              pack builder create $image_tag --config $builder.toml --pull-policy always && break
              n=$((n + 1))
              sleep $(($n * 2))
            done
      - run: docker save $image_tag > /tmp/workspace/$image_file

  test-guides:
    runs-on: ubuntu-22.04
    needs: [create-image, create-pack-builder]
    env:
      stack_tag: 16
      pack_env: BUILDPACK_S3_BASE_URL=https://heroku-legacy-redirects.vercel.app
    strategy:
      fail-fast: false
      matrix:
        builder: ["buildpacks-16"]
        language: ["java", "go", "node-js", "php", "python", "ruby", "typescript"]
    steps:
      - run: git clone https://github.com/heroku/${{ matrix.language }}-getting-started.git getting_started
      - run: cd getting_started && git checkout $GITHUB_SHA && cd -
      - uses: buildpacks/github-actions/setup-pack@v5.1.0
      - run: docker load < /tmp/workspace/pack-$stack_tag-build.tar
      - run: docker load < /tmp/workspace/pack-$stack_tag-run.tar
      - run: docker load < /tmp/workspace/${{ matrix.builder }}-build.tar
      - run: pack config trusted-builders add ghcr.io/fagiani/cnb/heroku-$stack_tag:builder
      - run: pack build pack-getting-started -e $pack-env -e BUNDLE_VERBOSE=1 --path getting_started --builder ghcr.io/fagiani/cnb/heroku-$stack_tag:builder --pull-policy never --verbose --clear-cache
      - run: docker run --name getting-started -d -e PORT=8080 pack-getting-started
      - run: sleep 5
      - run: docker exec getting-started true 2>/dev/null || (echo not running && docker logs getting-started && exit 1)
      
  publish:
    runs-on: ubuntu-22.04
    env:
      image_file: pack-16-build.tar
      image_tag: ghcr.io/fagiani/cnb/heroku-16:build
    if: success() && github.ref == 'refs/heads/master'
    needs:
      - test-guides
    strategy:
      fail-fast: false
    steps:
      - run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u ${{ secrets.DOCKER_HUB_USER }} --password-stdin 
      - name: Log into additional registry
        run: echo "${{ secrets.REGISTRY_TOKEN }}" | docker login ${{ secrets.REGISTRY_HOST }} -u "${{ secrets.REGISTRY_USER }}" --password-stdin
      - run: docker load < /tmp/workspace/$image_file
      - run: docker push $image_tag
      - name: Tag builder and push to registries
        run: docker tag $image_tag $image_tag_alias | docker push $image_tag_alias
