version: 2.1
orbs:
  pack: buildpacks/pack@0.2.4
jobs:
  create-image:
    parameters:
      dockerfile:
        description: "Dockerfile to build"
        type: string
      base_image:
        description: "The Docker image to be used in the FROM line of the Dockerfile"
        type: string
      stack_name:
        description: "The name of the stack"
        type: string
      image_file:
        description: "Local image archive file name"
        type: string
      image_tag:
        description: "Remote image tag name"
        type: string
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run: docker build -f << parameters.dockerfile >> --build-arg STACK=<< parameters.stack_name >> --build-arg BASE_IMAGE=<< parameters.base_image >> -t << parameters.image_tag >> .
      - run: docker save << parameters.image_tag >> > /tmp/workspace/<< parameters.image_file >>
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - << parameters.image_file >>
  create-pack-builder:
    parameters:
      builder_toml:
        description: "Builder toml"
        type: string
      image_file:
        description: "Local builder image archive file name"
        type: string
      image_tag:
        description: "Remote builder image name"
        type: string
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - pack/install-pack:
          version: 0.29.0
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run: docker load < $(ls /tmp/workspace/pack-*-build.tar | head -1)
      - run: docker load < $(ls /tmp/workspace/pack-*-run.tar | head -1)
      - run:
          name: Create builder with retries
          command: |
            n=1
            until [ "$n" -ge 5 ]
            do
              pack builder create << parameters.image_tag >> --config << parameters.builder_toml >> --pull-policy always && break
              n=$((n + 1))
              sleep $(($n * 2))
            done
      - run: docker save << parameters.image_tag >> > /tmp/workspace/<< parameters.image_file >>
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - << parameters.image_file >>
  test-getting-started-guide:
    parameters:
      language:
        description: "Language"
        type: string
      stack-tag:
        description: "The tag of the run stack (ex. '20' for heroku/heroku:20)"
        type: string
      commit:
        description: "Commit hash to checkout to before running"
        type: string
        default: "main"
      prebuild:
        description: "Command to run before the pack build starts"
        type: string
        default: "echo 'there is no prebuild command defined'"
      pack-env:
        description: "Set a custom pack ENV for build"
        type: string
        default: "MY_ENV=value"
    machine:
      image: ubuntu-2004:current
    resource_class: large
    steps:
      - run: git clone https://github.com/heroku/<< parameters.language >>-getting-started.git getting_started
      - run: cd getting_started && git checkout << parameters.commit >> && cd -
      - pack/install-pack:
          version: 0.29.0
      - attach_workspace:
          at: /tmp/workspace
      - run: docker load < /tmp/workspace/pack-<< parameters.stack-tag >>-build.tar
      - run: docker load < /tmp/workspace/pack-<< parameters.stack-tag >>-run.tar
      - run: docker load < /tmp/workspace/buildpacks-<< parameters.stack-tag >>.tar
      - run: pack config trusted-builders add ghcr.io/fagiani/cnb/heroku-<< parameters.stack-tag >>:builder
      - run: << parameters.prebuild >>
      - run: pack build pack-getting-started -e << parameters.pack-env >> -e BUNDLE_VERBOSE=1 --path getting_started --builder ghcr.io/fagiani/cnb/heroku-<< parameters.stack-tag >>:builder --pull-policy never --verbose --clear-cache
      - run: docker run --name getting-started -d -e PORT=8080 pack-getting-started
      - run: sleep 5
      - run: docker exec getting-started true 2>/dev/null || (echo not running && docker logs getting-started && exit 1)
  publish-image:
    parameters:
      image_file:
        description: "Name of the local image archive to publish"
        type: string
      image_tag:
        description: "Name of the dockerhub image to publish"
        type: string
      image_tag_alias:
        description: "Name of dockerhub image alias to publish"
        type: string
        default: ""
      image_tag_alias2:
        description: "Name of dockerhub image alias to publish"
        type: string
        default: ""
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - setup_remote_docker
      - run: docker login -u fagiani -p $DOCKER_HUB_PASS
      - run:
          name: Log into additional registry
          command: echo "$REGISTRY_TOKEN" | docker login ghcr.io -u fagiani --password-stdin
      - attach_workspace:
          at: /tmp/workspace
      - run: docker load < /tmp/workspace/<< parameters.image_file >>
      - run: docker push << parameters.image_tag >>
      - when:
          condition: << parameters.image_tag_alias >>
          steps:
            - run: docker tag << parameters.image_tag >> << parameters.image_tag_alias >>
            - run: docker push << parameters.image_tag_alias >>
      - when:
          condition: << parameters.image_tag_alias2 >>
          steps:
            - run: docker tag << parameters.image_tag >> << parameters.image_tag_alias2 >>
            - run: docker push << parameters.image_tag_alias2 >>

workflows:
  version: 2
  build-test-publish:
    jobs: &build-test-publish-jobs
      - create-image:
          name: create-16-build-image
          dockerfile: Dockerfile.build
          base_image: heroku/heroku:16-build
          stack_name: heroku-16
          image_tag: ghcr.io/fagiani/cnb/heroku-16:build
          image_file: pack-16-build.tar
      - create-image:
          name: create-16-run-image
          dockerfile: Dockerfile.run
          base_image: heroku/heroku:16
          stack_name: heroku-16
          image_tag: ghcr.io/fagiani/cnb/heroku-16:run
          image_file: pack-16-run.tar
      - create-pack-builder:
          name: create-service-builder-16
          image_tag: ghcr.io/fagiani/cnb/heroku-16:builder
          image_file: buildpacks-16.tar
          builder_toml: builder-16.toml
          requires:
            - create-16-run-image
            - create-16-build-image
      - test-getting-started-guide:
          language: go
          stack-tag: "16"
          name: test-go-16
          commit: b7ec67bd83f10ee6823e0b13b2962ecfd3e7bd7b
          requires:
            - create-service-builder-16
#      - test-getting-started-guide:
#          language: java
#          stack-tag: "16"
#          name: test-java-16
#          commit: 0bade558646a133347a46475ce53dca91c29a1b4
#          requires:
#            - create-service-builder-16
      - test-getting-started-guide:
          language: node-js
          stack-tag: "16"
          name: test-node-js-16
          commit: 15b9ad2f2fb7e8cc67bb29cc469171d201688f59
          requires:
            - create-service-builder-16
      - test-getting-started-guide:
          language: typescript
          stack-tag: "16"
          name: test-typescript-16
          requires:
            - create-service-builder-16
      - test-getting-started-guide:
          language: php
          stack-tag: "16"
          name: test-php-16
          commit: 9e1f03e1eb46dda9b5073e96cf224d75a4f42398
          requires:
            - create-service-builder-16
      - test-getting-started-guide:
          language: Python
          stack-tag: "16"
          name: test-python-16
          commit: e8ecbc00f6f2e99ef34157bcf6bfbabf9720756d
          pack-env: "BUILDPACK_S3_BASE_URL=https://heroku-legacy-redirects.vercel.app"
          requires:
            - create-service-builder-16
      - test-getting-started-guide:
          language: Ruby
          stack-tag: "16"
          name: test-ruby-16
          commit: b5fead0ea0ec60198ff029f5ba5c69e211b67038
          prebuild: "rm getting_started/.env"
          requires:
            - create-service-builder-16
      - publish-image:
          name: publish-16-build-stack
          image_file: pack-16-build.tar
          image_tag: ghcr.io/fagiani/cnb/heroku-16:build
          image_tag_alias: fagiani/pack:16-build
          requires:
            - test-go-16
#            - test-java-16
            - test-node-js-16
            - test-php-16
            - test-python-16
            - test-ruby-16
            - test-typescript-16
          filters:
            branches:
              only: master
      - publish-image:
          name: publish-16-run-stack
          image_file: pack-16-run.tar
          image_tag: ghcr.io/fagiani/cnb/heroku-16:run
          image_tag_alias: fagiani/pack:16
          requires:
            - test-go-16
#            - test-java-16
            - test-node-js-16
            - test-php-16
            - test-python-16
            - test-ruby-16
            - test-typescript-16
          filters:
            branches:
              only: master
      - publish-image:
          name: publish-service-builder-16
          image_file: buildpacks-16.tar
          image_tag: ghcr.io/fagiani/cnb/heroku-16:builder
          image_tag_alias: fagiani/buildpacks:16
          requires:
            - publish-16-build-stack
            - publish-16-run-stack
          filters:
            branches:
              only: master
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only: master
    jobs: *build-test-publish-jobs
